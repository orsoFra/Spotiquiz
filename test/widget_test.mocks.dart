// Mocks generated by Mockito 5.3.2 from annotations
// in spotiquiz/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:spotiquiz/services/auth.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFlutterSecureStorage_0 extends _i1.SmartFake
    implements _i2.FlutterSecureStorage {
  _FakeFlutterSecureStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Auth].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuth extends _i1.Mock implements _i3.Auth {
  MockAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FlutterSecureStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFlutterSecureStorage_0(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.FlutterSecureStorage);
  @override
  String get client_id => (super.noSuchMethod(
        Invocation.getter(#client_id),
        returnValue: '',
      ) as String);
  @override
  String get client_secret => (super.noSuchMethod(
        Invocation.getter(#client_secret),
        returnValue: '',
      ) as String);
  @override
  String get redirect_uri => (super.noSuchMethod(
        Invocation.getter(#redirect_uri),
        returnValue: '',
      ) as String);
  @override
  String get callback_scheme => (super.noSuchMethod(
        Invocation.getter(#callback_scheme),
        returnValue: '',
      ) as String);
  @override
  void printWrapped(String? text) => super.noSuchMethod(
        Invocation.method(
          #printWrapped,
          [text],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<String?> getCode() => (super.noSuchMethod(
        Invocation.method(
          #getCode,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<bool> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
